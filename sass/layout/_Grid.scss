.row {
  max-width: $row-width;
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  & [class^='col-'] {
    float: left;
    @include respond(phone) {
      // width: 100%;
      margin-right: 0 !important;
      width: 50%;
    }

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }

    @include respond(tab) {
      &:nth-child(even) {
        margin-right: 0;
      }
    }
  }

  @include clearfix;

  @include respond(mini-lap) {
    margin: 0 3rem;
  }
  @include respond(phone) {
    margin: 0 1rem;
  }
}

.col-1-of-2 {
  width: calc((100% - #{$gutter-horizontal}) / 2);
  &:nth-child(2n) {
    margin-right: 0 !important;
  }

  @include respond(phone) {
    width: 100% !important;
    &:not(:last-child) {
      margin-bottom: 1rem;
    }
  }
}

.col-1-of-3 {
  width: calc((100% - #{$gutter-horizontal * 2}) / 3);
  &:nth-child(3n) {
    margin-right: 0 !important;
  }

  @include respond(tab) {
    width: calc((100% - #{$gutter-horizontal}) / 2);
    &:not(:nth-child(2n)) {
      margin-right: $gutter-horizontal !important;
    }
  }

  @include respond(phone) {
    &:not(:nth-child(10n)) {
      margin-right: 0 !important;
    }
  }
}

.col-1-of-4 {
  width: calc((100% - #{$gutter-horizontal * 3}) / 4);

  &:nth-child(4n) {
    margin-right: 0 !important;
  }

  @include respond(tab) {
    width: calc((100% - #{$gutter-horizontal}) / 2);
    &:nth-child(2n) {
      margin-right: 0 !important;
    }
  }
}

.col-2-of-3 {
  width: calc(
    (2 * ((100% - #{$gutter-horizontal * 2}) / 3)) + #{$gutter-horizontal}
  );
}

.col-2-of-4 {
  width: calc(
    (2 * ((100% - #{$gutter-horizontal * 3}) / 4)) + #{$gutter-horizontal}
  );
}

.col-3-of-4 {
  width: calc(
    (3 * ((100% - #{$gutter-horizontal * 3}) / 4)) + #{$gutter-horizontal * 2}
  );
}

// Fixed Column on any device
.fixed-col-1-of-2 {
  width: calc((100% - #{$gutter-horizontal-small}) / 2);
  margin-right: $gutter-horizontal-small;
  float: left;
  &:nth-child(2n) {
    margin-right: 0 !important;
  }
}

// For Mobile Single Column
.mb--col-1-of-3 {
  width: calc((100% - #{$gutter-horizontal * 2}) / 3);
  float: left;
  &:nth-child(3n) {
    margin-right: 0 !important;
  }
  &:not(:last-child) {
    margin-right: $gutter-horizontal;
    @include respond(phone) {
      margin-right: 0;
    }
  }
  @include respond(phone) {
    width: 100%;
  }
}

// Fixed Column on any device
.fixed-col-1-of-3 {
  width: calc((100% - #{$gutter-horizontal-small} * 2) / 3);
  
  float: left;
 
  &:not(:last-child) {
    margin-right: $gutter-horizontal-small;
  }
  // &:nth-child(2n) {  // Risky, Grid
  //   margin-right: 0 !important;
  // }
}
.fixed-col-2-of-3 {
  width: calc(
    (2 * ((100% - #{$gutter-horizontal-small} * 2) / 3)) + #{$gutter-horizontal-small}
  );
  float: left;
}
